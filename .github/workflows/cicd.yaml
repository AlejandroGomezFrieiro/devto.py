name: "CICD"
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test_publish:
    name: "Test publishing"
    runs-on: "ubuntu-latest"
    needs: [test, lint]
    environment:
      name: testpypi
      url: https://test.pypi.org/p/devto
    permissions:
      id-token: write
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Prepare package for release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        uv build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: pypi-publish
      uses: pypa/gh-action-pypi-publish@v1.12.3
      with:
        repository_url: https://pypi.org/legacy/
    
  publish:
    name: "Publish to Pypi"
    runs-on: "ubuntu-latest"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [test, lint]
    permissions:
      id-token: write
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Prepare package for release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        uv run semantic-release publish
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository_url: https://test.pypi.org/legacy/

  lock_file:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: uv lock --locked
  test:
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: [lock_file]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Run tests
      run: pytest

  lint:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    needs: [lock_file]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Run linting
      run: ruff check
